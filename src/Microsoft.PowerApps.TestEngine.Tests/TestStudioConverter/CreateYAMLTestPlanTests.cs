// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

using Microsoft.PowerApps.TestEngine.Config;
using Microsoft.PowerApps.TestEngine.TestStudioConverter;
using Moq;
using System;
using System.Collections.Generic;
using System.IO;
using Microsoft.Extensions.Logging;
using Xunit;
using Microsoft.PowerApps.TestEngine.System;

namespace Microsoft.PowerApps.TestEngine.Tests.TestStudioConverter
{
    public class CreateYAMLTestPlanTests
    {

        [Fact]
        public void ValidFileTest()
        {
            var InputDir = "path/to/nothing/that/exists/test.json";
            ILoggerFactory loggerFactory = LoggerFactory.Create(builder => { builder.ClearProviders(); builder.AddConsole(); });
            ILogger<CreateYAMLTestPlan> logger = loggerFactory.CreateLogger<CreateYAMLTestPlan>();
            CreateYAMLTestPlan converter = new CreateYAMLTestPlan(logger);

            Assert.Throws<DirectoryNotFoundException>(
                () => converter.exportYAML(InputDir)
            );
        }

        [Fact]
        public void ExtractTestStepsFromJsonTest()
        {
            var testJson = @"{
    ""TopParent"": {
        ""Type"": ""ControlInfo"",
        ""Name"": ""Test_7F478737223C4B69"",
        ""Template"": {
            ""Id"": ""http://microsoft.com/appmagic/apptest"",
            ""Version"": ""1.0"",
            ""LastModifiedTimestamp"": ""0"",
            ""Name"": ""AppTest"",
            ""FirstParty"": true,
            ""IsPremiumPcfControl"": false,
            ""IsCustomGroupControlTemplate"": false,
            ""CustomGroupControlTemplateName"": """",
            ""IsComponentDefinition"": false,
            ""OverridableProperties"": {}
        },
        ""Index"": 0.0,
        ""PublishOrderIndex"": 0,
        ""VariantName"": """",
        ""LayoutName"": """",
        ""MetaDataIDKey"": """",
        ""PersistMetaDataIDKey"": false,
        ""IsFromScreenLayout"": false,
        ""StyleName"": """",
        ""Parent"": """",
        ""IsDataControl"": true,
        ""AllowAccessToGlobals"": true,
        ""IsGroupControl"": false,
        ""IsAutoGenerated"": false,
        ""Rules"": [],
        ""ControlPropertyState"": [],
        ""IsLocked"": false,
        ""ControlUniqueId"": ""2"",
        ""Children"": [
            {
                ""Type"": ""ControlInfo"",
                ""Name"": ""a2788d19-22e2-4a03-b8ba-3ebc4aad96b5"",
                ""HasDynamicProperties"": false,
                ""Template"": {
                    ""Id"": ""http://microsoft.com/appmagic/testsuite"",
                    ""Version"": ""1.0"",
                    ""LastModifiedTimestamp"": ""0"",
                    ""Name"": ""TestSuite"",
                    ""FirstParty"": true,
                    ""IsPremiumPcfControl"": false,
                    ""IsCustomGroupControlTemplate"": false,
                    ""CustomGroupControlTemplateName"": """",
                    ""IsComponentDefinition"": false,
                    ""OverridableProperties"": {}
                },
                ""Index"": 0.0,
                ""PublishOrderIndex"": 0,
                ""VariantName"": """",
                ""LayoutName"": """",
                ""MetaDataIDKey"": """",
                ""PersistMetaDataIDKey"": false,
                ""IsFromScreenLayout"": false,
                ""StyleName"": """",
                ""Parent"": ""Test_7F478737223C4B69"",
                ""IsDataControl"": true,
                ""AllowAccessToGlobals"": true,
                ""IsGroupControl"": false,
                ""IsAutoGenerated"": false,
                ""Rules"": [
                    {
                        ""Property"": ""DisplayName"",
                        ""Category"": ""Data"",
                        ""InvariantScript"": ""\""Suite\"""",
                        ""RuleProviderType"": ""Unknown""
                    },
                    {
                        ""Property"": ""Description"",
                        ""Category"": ""Data"",
                        ""InvariantScript"": ""\""\"""",
                        ""RuleProviderType"": ""Unknown""
                    }
                ],
                ""ControlPropertyState"": [
                    ""DisplayName"",
                    ""Description""
                ],
                ""IsLocked"": false,
                ""ControlUniqueId"": ""5"",
                ""Children"": [
                    {
                        ""Type"": ""ControlInfo"",
                        ""Name"": ""e8b0a102-2096-4cfc-a6a4-c4b4030ec8c9"",
                        ""HasDynamicProperties"": false,
                        ""Template"": {
                            ""Id"": ""http://microsoft.com/appmagic/testcase"",
                            ""Version"": ""1.0"",
                            ""LastModifiedTimestamp"": ""0"",
                            ""Name"": ""TestCase"",
                            ""FirstParty"": true,
                            ""IsPremiumPcfControl"": false,
                            ""IsCustomGroupControlTemplate"": false,
                            ""CustomGroupControlTemplateName"": """",
                            ""IsComponentDefinition"": false,
                            ""OverridableProperties"": {}
                        },
                        ""Index"": 0.0,
                        ""PublishOrderIndex"": 0,
                        ""VariantName"": """",
                        ""LayoutName"": """",
                        ""MetaDataIDKey"": """",
                        ""PersistMetaDataIDKey"": false,
                        ""IsFromScreenLayout"": false,
                        ""StyleName"": """",
                        ""Parent"": ""a2788d19-22e2-4a03-b8ba-3ebc4aad96b5"",
                        ""IsDataControl"": true,
                        ""AllowAccessToGlobals"": true,
                        ""IsGroupControl"": false,
                        ""IsAutoGenerated"": false,
                        ""Rules"": [
                            {
                                ""Property"": ""DisplayName"",
                                ""Category"": ""Data"",
                                ""InvariantScript"": ""\""Case\"""",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Description"",
                                ""Category"": ""Data"",
                                ""InvariantScript"": ""\""\"""",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""TestStepsMetadata"",
                                ""Category"": ""Data"",
                                ""InvariantScript"": ""\""[{\""\""Description\""\"":\""\""SetProperty(IncrementControl1, 10)\""\"",\""\""Rule\""\"":\""\""Step1\""\"",\""\""ScreenId\""\"":null},{\""\""Description\""\"":\""\""Assert(In)\""\"",\""\""Rule\""\"":\""\""Step2\""\"",\""\""ScreenId\""\"":null},{\""\""Description\""\"":\""\""SetProperty(IncrementControl1.value, 20)\""\"",\""\""Rule\""\"":\""\""Step3\""\"",\""\""ScreenId\""\"":null},{\""\""Description\""\"":\""\""Assert(IncrementControl1.value = 20, \\\""\""Make sure increment control is set to 10\\\""\"")\""\"",\""\""Rule\""\"":\""\""Step4\""\"",\""\""ScreenId\""\"":null}]\"""",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step1"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""SetProperty(IncrementControl1.value, 10)"",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step2"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""Assert(IncrementControl1.value = 10, \""Make sure increment control is set to 10\"")"",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step3"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""SetProperty(IncrementControl1.value, 20)"",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step4"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""Assert(IncrementControl1.value = 20, \""Make sure increment control is set to 10\"")"",
                                ""RuleProviderType"": ""Unknown""
                            }
                        ],
                        ""ControlPropertyState"": [
                            ""DisplayName"",
                            ""Description"",
                            ""Step1"",
                            ""TestStepsMetadata"",
                            ""Step2"",
                            ""Step3"",
                            ""Step4""
                        ],
                        ""IsLocked"": false,
                        ""ControlUniqueId"": ""6"",
                        ""Children"": []
                    }
                ]
            }
        ]
    }
}";
            List<string> expectedTestSteps = new List<string>(new string[] { 
                "SetProperty(IncrementControl1.value, 10)",
                "Assert(IncrementControl1.value = 10, \"Make sure increment control is set to 10\")",
                "SetProperty(IncrementControl1.value, 20)",
                "Assert(IncrementControl1.value = 20, \"Make sure increment control is set to 10\")",
            });

            ILoggerFactory loggerFactory = LoggerFactory.Create(builder => { builder.ClearProviders(); builder.AddConsole(); });
            ILogger<CreateYAMLTestPlan> logger = loggerFactory.CreateLogger<CreateYAMLTestPlan>();
            

            var mockFileIO = new Mock<IFileSystem>(MockBehavior.Strict);

            var jsonFilePath = "test.json";
            mockFileIO.Setup(f => f.ReadAllText(It.IsAny<string>())).Returns(testJson);
            mockFileIO.Setup(f => f.IsValidFilePath(It.IsAny<string>())).Returns((bool)true);
            mockFileIO.Setup(f => f.WriteTextToFile(It.IsAny<string>(), It.IsAny<string>()));
            CreateYAMLTestPlan converter = new CreateYAMLTestPlan(logger, mockFileIO.Object);
            
            converter.exportYAML(jsonFilePath);

            List<string> actualTestSteps = converter.GetTestSteps();
            Assert.NotNull(actualTestSteps);
            Assert.Equal(expectedTestSteps, actualTestSteps);
        }

        [Fact]
        public void CheckOutputYamlTest()
        {

            var buttonClickerTestJson = @"{
    ""TopParent"": {
        ""Type"": ""ControlInfo"",
        ""Name"": ""Test_7F478737223C4B69"",
        ""Template"": {
            ""Id"": ""http://microsoft.com/appmagic/apptest"",
            ""Version"": ""1.0"",
            ""LastModifiedTimestamp"": ""0"",
            ""Name"": ""AppTest"",
            ""FirstParty"": true,
            ""IsPremiumPcfControl"": false,
            ""IsCustomGroupControlTemplate"": false,
            ""CustomGroupControlTemplateName"": """",
            ""IsComponentDefinition"": false,
            ""OverridableProperties"": {}
        },
        ""Index"": 0.0,
        ""PublishOrderIndex"": 0,
        ""VariantName"": """",
        ""LayoutName"": """",
        ""MetaDataIDKey"": """",
        ""PersistMetaDataIDKey"": false,
        ""IsFromScreenLayout"": false,
        ""StyleName"": """",
        ""Parent"": """",
        ""IsDataControl"": true,
        ""AllowAccessToGlobals"": true,
        ""IsGroupControl"": false,
        ""IsAutoGenerated"": false,
        ""Rules"": [],
        ""ControlPropertyState"": [],
        ""IsLocked"": false,
        ""ControlUniqueId"": ""2"",
        ""Children"": [
            {
                ""Type"": ""ControlInfo"",
                ""Name"": ""cb660790-1ecb-41c2-9d83-70d552470fef"",
                ""HasDynamicProperties"": false,
                ""Template"": {
                    ""Id"": ""http://microsoft.com/appmagic/testsuite"",
                    ""Version"": ""1.0"",
                    ""LastModifiedTimestamp"": ""0"",
                    ""Name"": ""TestSuite"",
                    ""FirstParty"": true,
                    ""IsPremiumPcfControl"": false,
                    ""IsCustomGroupControlTemplate"": false,
                    ""CustomGroupControlTemplateName"": """",
                    ""IsComponentDefinition"": false,
                    ""OverridableProperties"": {}
                },
                ""Index"": 0.0,
                ""PublishOrderIndex"": 0,
                ""VariantName"": """",
                ""LayoutName"": """",
                ""MetaDataIDKey"": """",
                ""PersistMetaDataIDKey"": false,
                ""IsFromScreenLayout"": false,
                ""StyleName"": """",
                ""Parent"": ""Test_7F478737223C4B69"",
                ""IsDataControl"": true,
                ""AllowAccessToGlobals"": true,
                ""IsGroupControl"": false,
                ""IsAutoGenerated"": false,
                ""Rules"": [
                    {
                        ""Property"": ""DisplayName"",
                        ""Category"": ""Data"",
                        ""InvariantScript"": ""\""Suite\"""",
                        ""RuleProviderType"": ""Unknown""
                    },
                    {
                        ""Property"": ""Description"",
                        ""Category"": ""Data"",
                        ""InvariantScript"": ""\""\"""",
                        ""RuleProviderType"": ""Unknown""
                    }
                ],
                ""ControlPropertyState"": [
                    ""DisplayName"",
                    ""Description""
                ],
                ""IsLocked"": false,
                ""ControlUniqueId"": ""6"",
                ""Children"": [
                    {
                        ""Type"": ""ControlInfo"",
                        ""Name"": ""af545162-4e0b-4831-af15-c0d878f34474"",
                        ""HasDynamicProperties"": false,
                        ""Template"": {
                            ""Id"": ""http://microsoft.com/appmagic/testcase"",
                            ""Version"": ""1.0"",
                            ""LastModifiedTimestamp"": ""0"",
                            ""Name"": ""TestCase"",
                            ""FirstParty"": true,
                            ""IsPremiumPcfControl"": false,
                            ""IsCustomGroupControlTemplate"": false,
                            ""CustomGroupControlTemplateName"": """",
                            ""IsComponentDefinition"": false,
                            ""OverridableProperties"": {}
                        },
                        ""Index"": 0.0,
                        ""PublishOrderIndex"": 0,
                        ""VariantName"": """",
                        ""LayoutName"": """",
                        ""MetaDataIDKey"": """",
                        ""PersistMetaDataIDKey"": false,
                        ""IsFromScreenLayout"": false,
                        ""StyleName"": """",
                        ""Parent"": ""cb660790-1ecb-41c2-9d83-70d552470fef"",
                        ""IsDataControl"": true,
                        ""AllowAccessToGlobals"": true,
                        ""IsGroupControl"": false,
                        ""IsAutoGenerated"": false,
                        ""Rules"": [
                            {
                                ""Property"": ""DisplayName"",
                                ""Category"": ""Data"",
                                ""InvariantScript"": ""\""Case\"""",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Description"",
                                ""Category"": ""Data"",
                                ""InvariantScript"": ""\""Test to check if a button click will increase the value of text\"""",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""TestStepsMetadata"",
                                ""Category"": ""Data"",
                                ""InvariantScript"": ""\""[{\""\""Description\""\"":\""\""Click Button\""\"",\""\""Rule\""\"":\""\""Step1\""\"",\""\""ScreenId\""\"":null},{\""\""Description\""\"":\""\""Check if value has increased\""\"",\""\""Rule\""\"":\""\""Step2\""\"",\""\""ScreenId\""\"":\""\""3\""\""},{\""\""Description\""\"":\""\""Click Button\""\"",\""\""Rule\""\"":\""\""Step3\""\"",\""\""ScreenId\""\"":null},{\""\""Description\""\"":\""\""Check if value has increased\""\"",\""\""Rule\""\"":\""\""Step4\""\"",\""\""ScreenId\""\"":null}]\"""",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step1"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""Select(Button1)"",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step2"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""Assert(Text(Label1.Text) = \""1\"", \""Wrong Counter Value. Value Should be 1\"")"",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step3"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""Select(Button1)"",
                                ""RuleProviderType"": ""Unknown""
                            },
                            {
                                ""Property"": ""Step4"",
                                ""Category"": ""Behavior"",
                                ""InvariantScript"": ""Assert(Text(Label1.Text) = \""2\"", \""Wrong Counter Value. Value Should be 2\"")"",
                                ""RuleProviderType"": ""Unknown""
                            }
                        ],
                        ""ControlPropertyState"": [
                            ""DisplayName"",
                            ""Description"",
                            ""Step1"",
                            ""TestStepsMetadata"",
                            ""Step2"",
                            ""Step3"",
                            ""Step4""
                        ],
                        ""IsLocked"": false,
                        ""ControlUniqueId"": ""7"",
                        ""Children"": []
                    }
                ]
            }
        ]
    }
}";

            var expectedYamlTestPlan = @"test:
  name: Case
  description: Test to check if a button click will increase the value of text
  persona: User1
  appLogicalName: Replace with appLogicalName
  networkRequestMocks: 
  testSteps: |
    = 
    Select(Button1);
    Assert(Text(Label1.Text) = ""1"", ""Wrong Counter Value. Value Should be 1"");
    Select(Button1);
    Assert(Text(Label1.Text) = ""2"", ""Wrong Counter Value. Value Should be 2"");
testSettings:
  browserConfigurations:
  - browser: Chromium
    device: 
    screenWidth: 
    screenHeight: 
  recordVideo: true
  enablePowerFxOverlay: false
  timeout: 30000
environmentVariables:
  users:
  - personaName: User1
    emailKey: user1Email
    passwordKey: user1Password
";

            ILoggerFactory loggerFactory = LoggerFactory.Create(builder => { builder.ClearProviders(); builder.AddConsole(); });
            ILogger<CreateYAMLTestPlan> logger = loggerFactory.CreateLogger<CreateYAMLTestPlan>();

            var mockFileIO = new Mock<IFileSystem>(MockBehavior.Strict);

            var jsonFilePath = "test.json";
            mockFileIO.Setup(f => f.ReadAllText(It.IsAny<string>())).Returns(buttonClickerTestJson);
            mockFileIO.Setup(f => f.IsValidFilePath(It.IsAny<string>())).Returns((bool)true);
            mockFileIO.Setup(f => f.WriteTextToFile(It.IsAny<string>(), It.IsAny<string>()));

            CreateYAMLTestPlan converter = new CreateYAMLTestPlan(logger, mockFileIO.Object);
            converter.exportYAML(jsonFilePath);

            string? actualTestPlan = converter.GetYamlTestPlan();

            Assert.NotNull(actualTestPlan);
            Assert.Equal(actualTestPlan, expectedYamlTestPlan);

        }
    }
}


