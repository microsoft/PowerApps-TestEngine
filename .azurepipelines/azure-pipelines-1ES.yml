trigger: none
pr: none
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      policheck:
        enabled: true
      codeSignValidation:
        enabled: true
      codeql:
        ${{ if eq(variables['Build.SourceBranch'], variables['AllowedBranch']) }}:
          enabledOnNonDefaultBranches: true
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    stages:
    - stage: stage
      jobs:
      - job: Build_PowerAppsTestEngine
        displayName: 'Build PowerAppsTestEngine Solution'
        strategy:
          matrix:
            Debug:
              BuildConfiguration: 'Debug'
            Release:
              BuildConfiguration: 'Release'
        templateContext:
          outputs:
          - output: pipelineArtifact
            condition: succeeded()
            artifactName: 'PowerApps.TestEngine ($(BuildConfiguration))'
            targetPath: '$(Build.ArtifactStagingDirectory)'
          - output: nuget
            condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'), eq(variables['UpdateVer'], 'true'))
            useDotNetTask: false # The default is false to use the NuGetCommand task. Set to true to use the DotNetCoreCLI task to publish packages.
            packagesToPush: '$(Build.ArtifactStagingDirectory)/Microsoft.PowerApps.TestEngine.*.nupkg'
            packageParentPath: '$(Build.ArtifactStagingDirectory)'
            publishVstsFeed: $(InternalFeed)
            nuGetFeedType: internal
            allowPackageConflicts: true # Optional. NuGetCommand task only.
        steps:
        - script: |
            echo "Hello $(myVariable)"
        - task: UseDotNet@2
          displayName: 'Use dotnet sdk 8.0'
          inputs:
            version: 8.0.x
            installationPath: '$(Agent.ToolsDirectory)/dotnet'
        - task: DotNetCoreCLI@2
          displayName: 'Build and test'
          inputs:
            command: 'run'
            projects: '$(Build.SourcesDirectory)/targets/targets.csproj'
            arguments: '-- ci -c $(BuildConfiguration)'
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'VSTest'
            testResultsFiles: '**/*-*.trx'
            searchFolder: '$(Build.SourcesDirectory)/obj/'
            mergeTestResults: true
            failTaskOnFailedTests: true
        - task: EsrpCodeSigning@5
          displayName: 'ESRP sign'
          condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))
          inputs:
            ConnectedServiceName: $(EsrpConServName)
            AppRegistrationClientId: $(EsrpAppRegCliId)
            AppRegistrationTenantId: $(EsrpAppRegTenId)
            AuthAKVName: $(EsrpKVName)
            AuthCertName: $(EsrpAuthCertName)
            AuthSignCertName: $(EsrpAuthSignCertName)
            FolderPath: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)/PowerAppsTestEngineWrapper/'
            Pattern: '*.dll'
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                {
                  "KeyCode": "CP-233863-SN",
                  "OperationCode": "StrongNameSign",
                  "Parameters": {},
                  "ToolName": "sign",
                  "ToolVersion": "1.0"
                },
                {
                  "KeyCode": "CP-233863-SN",
                  "OperationCode": "StrongNameVerify",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {}
                },
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolSign",
                  "Parameters": {
                    "OpusName": "Microsoft",
                    "OpusInfo": "http://www.microsoft.com",
                    "Append": "/as",
                    "FileDigest": "/fd \"SHA256\"",
                    "PageHash": "/NPH",
                    "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  },
                  "ToolName": "sign",
                  "ToolVersion": "1.0"
                },
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolVerify",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {}
                }
              ]
        - task: CopyFiles@2
          displayName: 'Copy Built Files to Artifact Staging Directory'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/bin'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/buildoutput/bin'
            # Include all files except abc.txt
            Contents: |
              **/*
              !**/ThirdPartyNotices.txt
        - task: CopyFiles@2
          displayName: 'Copy Built Files to Artifact Staging Directory'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/obj'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/buildoutput/obj'
            # Include all files except abc.txt
            Contents: |
              **/*
              !**/ThirdPartyNotices.txt
        - task: CopyFiles@2
          displayName: 'Copy Built Files to Artifact Staging Directory'
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/pkg'
            TargetFolder: '$(Build.ArtifactStagingDirectory)/buildoutput/pkg'
            # Include all files except abc.txt
            Contents: |
              **/*
              !**/ThirdPartyNotices.txt
        - task: DotNetCoreCLI@2
          displayName: 'Pack'
          inputs:
            command: 'run'
            projects: '$(Build.SourcesDirectory)/targets/targets.csproj'
            arguments: '-- pack-AlphaV2 -c $(BuildConfiguration) -o $(Build.ArtifactStagingDirectory)'
          condition: succeeded()
        - task: EsrpCodeSigning@5
          displayName: 'ESRP sign nuget packages'
          inputs:
            ConnectedServiceName: $(EsrpConServName)
            AppRegistrationClientId: $(EsrpAppRegCliId)
            AppRegistrationTenantId: $(EsrpAppRegTenId)
            AuthAKVName: $(EsrpKVName)
            AuthCertName: $(EsrpAuthCertName)
            AuthSignCertName: $(EsrpAuthSignCertName)
            FolderPath: '$(Build.ArtifactStagingDirectory)'
            Pattern: '*.nupkg'
            signConfigType: inlineSignParams
            inlineOperation: |
              [
                {
                  "KeyCode": "CP-401405",
                  "OperationCode": "NuGetSign",
                  "Parameters": {},
                  "ToolName": "sign",
                  "ToolVersion": "1.0"
                },
                {
                  "KeyCode": "CP-401405",
                  "OperationCode": "NuGetVerify",
                  "Parameters": {},
                  "ToolName": "sign",
                  "ToolVersion": "1.0"
                }
              ]
          condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'))
        - task: PublishSymbols@2
          displayName: 'Publish symbols'
          condition: and(succeeded(), eq(variables['BuildConfiguration'], 'Release'), eq(variables['UpdateVer'], 'true'))
          continueOnError: true
          enabled: True
          inputs:
            SearchPattern: '$(Build.SourcesDirectory)/bin/$(BuildConfiguration)/**/*.pdb'
            SymbolServerType: TeamServices
            SymbolsPath: http://symweb/
            CompressSymbols: true
            IndexSources: True
            SymbolsArtifactName: TestEngine_Symbols_$(Build.BuildNumber)
