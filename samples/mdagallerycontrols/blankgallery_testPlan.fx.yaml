# yaml-embedded-languages: powerfx
testSuite:
  testSuiteName: MDA Custom Page tests - Gallery Controls
  testSuiteDescription: Verify test cases for MDA Gallery Controls
  persona: User1
  appLogicalName: NotNeeded  
  testCases: 
    - testCaseName: Test Gallery Control - Validate Selection by Row Number
      testCaseDescription: Ensure that selecting an item in the Gallery control by specifying the row number updates the selected record accurately.
      testSteps: |
          Select(Gallery1, 3);          
          Assert(Index(Gallery1.AllItems, 3).Label1.Text = "Action Figure", "Verify the selected record's Title value is 'Action Figure'");
          Assert(Index(Gallery1.AllItems, 3).Label3.Text = "24.99", "Verify the selected record's Price value is '24.99'");
          Select(Gallery2, 3);
          Assert(Index(Gallery2.AllItems, 3).Label6.Text = "Action Figure", "Verify the selected record's Title value is 'Action Figure'");
          Assert(Index(Gallery2.AllItems, 3).Label8.Text = "24.99", "Verify the selected record's Price value is '24.99'");

    - testCaseName: Test Gallery Control - Validate Selection via Icon
      testCaseDescription: Ensure that selecting an item in the Gallery control using an icon updates the selected record accurately.
      testSteps: |
          Select(Gallery1, 5, Icon1);
          Assert(Index(Gallery1.AllItems, 5).Label1.Text = "Laptop", "Verify the selected record's Title value is 'Laptop'");
          Assert(Index(Gallery1.AllItems, 5).Label3.Text = "999.99", "Verify the selected record's Price value is '999.99'");  
          Select(Gallery2, 5, Icon2);
          Assert(Index(Gallery2.AllItems, 5).Label6.Text = "Laptop", "Verify the selected record's Title value is 'Laptop'");
          Assert(Index(Gallery2.AllItems, 5).Label8.Text = "999.99", "Verify the selected record's Price value is '999.99'");  

    - testCaseName: Populate gallery with data
      testCaseDescription: Populate gallery with data and validate with count
      testSteps: |
        = 
          Assert(CountRows(Gallery1.Items) = 10, "Checking the Items count of the Horizontal Gallery control");
          Assert(CountRows(Gallery2.Items) = 10, "Checking the Items count of the Flexible Gallery control");

    - testCaseName: Test Gallery Control - Search and Validate Result Count
      testCaseDescription: Verify that searching the Gallery control using input from the text box updates the displayed items correctly.
      testSteps: |
          SetProperty(txtSearchInput.Value, "Jeans");
          Select(icnSearch); 
          Wait(Gallery1,"AllItemsCount", 1);
          Wait(Gallery2,"AllItemsCount", 1);
          Assert(Gallery1.AllItemsCount = 1, "Checking if the Horizontal Gallery displays the correct number of items after search");
          Assert(Gallery2.AllItemsCount = 1, "Checking if the Flexible Gallery displays the correct number of items after search");
          SetProperty(txtSearchInput.Value, "");          
          SetProperty(txtSearchInput.Value, "e");
          Select(icnSearch);
          Wait(Gallery1,"AllItemsCount", 7);
          Wait(Gallery2,"AllItemsCount", 7);
          Assert(Gallery1.AllItemsCount = 7, "Checking if the Horizontal Gallery displays the correct number of items after search");
          Assert(Gallery2.AllItemsCount = 7, "Checking if the Flexible Gallery displays the correct number of items after search");
   
      
    - testCaseName: Test Gallery Control - Validate ShowNavigation Property
      testCaseDescription: Verify that the ShowNavigation property of the Gallery control is set and validated correctly.
      testSteps: |
        SetProperty(txtSearchInput.Value, "");  
        SetProperty(Gallery1.ShowNavigation, false);
        SetProperty(Gallery2.ShowNavigation, false);
        Assert(Gallery1.ShowNavigation = false, "Verify the ShowNavigation property is set to false");  
        Assert(Gallery2.ShowNavigation = false, "Verify the ShowNavigation property is set to false");  
        SetProperty(Gallery1.ShowNavigation, true);
        SetProperty(Gallery2.ShowNavigation, true);
        Assert(Gallery1.ShowNavigation = true, "Verify the ShowNavigation property is set to true");
        Assert(Gallery2.ShowNavigation = true, "Verify the ShowNavigation property is set to true");

    - testCaseName: Test Gallery Control - Validate Selectable Property
      testCaseDescription: Verify that the Selectable property of the Gallery control is set and validated correctly.
      testSteps: |
          SetProperty(Gallery1.Selectable, true);
          SetProperty(Gallery2.Selectable, true);
          Assert(Gallery1.Selectable = true, "Verify the Selectable property is set to true");
          Assert(Gallery2.Selectable = true, "Verify the Selectable property is set to true");
          SetProperty(Gallery1.Selectable, false);
          SetProperty(Gallery2.Selectable, false);
          Assert(Gallery1.Selectable = false, "Verify the Selectable property is set to false");
          Assert(Gallery2.Selectable = false, "Verify the Selectable property is set to false");

    - testCaseName: Test Gallery Control - Filter and Validate Single Item
      testCaseDescription: Ensure that filtering the Gallery control by a specific title updates the displayed items correctly and validates the item count.
      testSteps: | 
           SetProperty(Gallery1.Items, Filter(Gallery1.Items, 'cr7d6_title'="Coffee Maker")); 
           SetProperty(Gallery2.Items, Filter(Gallery2.Items, 'cr7d6_title'="Coffee Maker"));
           Select(Gallery1, 1);
           Select(Gallery2, 1);
           Assert(Label1.Text = "Coffee Maker", "Checking the Items count of the Gallery control");
           Assert(Label6.Text = "Coffee Maker", "Checking the Items count of the Gallery control");
             
     # Both examples provided below are effective.
     # SetProperty(Gallery1.Items, Search(Gallery1.Items, "Action Figure", 'cr7d6_title'));     
     # SetProperty(Gallery1.Items, Filter(Gallery1.Items, Title6.Text="SmartPhone")); 
testSettings:
  headless: false
  locale: "en-US"
  recordVideo: true
  extensionModules:
    enable: true
  browserConfigurations:
    - browser: Chromium
      channel: msedge

environmentVariables:
  users:
    - personaName: User1
      emailKey: user1Email
      passwordKey: NotNeeded
