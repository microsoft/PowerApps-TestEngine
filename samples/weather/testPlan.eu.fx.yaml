# yaml-embedded-languages: powerfx
testSuite:
  testSuiteName: Weather Sample (Non en-us version)
  testSuiteDescription: Run Weather sample using locale settings for European cultures using ; as seporator for arguments and ;; to seperate different statements
  persona: User1
  appLogicalName: NotNeeded
  onTestSuiteStart: |
    = Experimental.SimulateDataverse({
          Action: "Query";
          Entity: "te_weathercategories";
          Then: Table(
            {
                'te_categoryname': "Test Category";
                'createdon': "2024-12-02T17:52:45Z";
                'te_weathercategoryid': "8cd3faaa-97ac-4e78-8b71-16c82cabb856"
            }
          )
      });;
      Experimental.SimulateDataverse({
      Action: "Query";
      Entity: "te_weathersnapshots";
      Then: Table(
          { 
              'te_city': "Test; WA";
              'te_date': "2024-12-03T10:41:24Z";
              'te_description': "Match: Test, WA; Temp: 6°C, Feels: 9°C, Partly sunny";
              'te_weathersnapshotid': "a611b4e0-ffb0-ef11-b8e8-6045bd006fad";
              '_te_weathercategory_value': "ff58de6c-905d-457d-846b-3e0b2aa4c5fd";
              '_te_weathercategory_value@Microsoft.Dynamics.CRM.associatednavigationproperty': "te_WeatherCategory";
              '_te_weathercategory_value@Microsoft.Dynamics.CRM.lookuplogicalname': "te_weathercategory"; 
              '_te_weathercategory_value@OData.Community.Display.V1.FormattedValue': "Test Category";
              'te_date@OData.Community.Display.V1.FormattedValue': "12/3/2024"
          })
      });;
      Experimental.SimulateConnector(
          {
          name: "msnweather"; 
          then: {
                  responses: { 
                      weather: { 
                          current: {
                              temp: 30;
                              feels: 20;
                              cap: "Sunny"
                          }
                      };
                      source: { 
                          location: "Test Location"
                      }
                  };
                  units: { 
                      temperature: "^F"
                  }
              }
          }
      )
  testCases:
    - testCaseName: Search for location weather
      testCaseDescription: Set location and verify data loaded as expected
      testSteps: |
        = 
          SetProperty(LocationSearch.Value; "Test Location");;
          Select(SearchNow);;
          Assert(CountRows(WeatherCategory.Items)=1);;
          Assert(CountRows(Gallery1.Items)=1);;
          Assert(Summary.Text=
            Switch(
              Lower(Language()); 
              "en-us"; "Match: Test Location, Temp: 30^F, Feels: 20^F, Sunny";
              "fr-fr"; "Correspondance: Test Location, Température: 30^F, Ressenti: 20^F, Sunny";
              "de-de"; "Übereinstimmung: Test Location, Temperatur: 30^F, Gefühlt: 20^F, Sunny"
            )
          );;
    - testCaseName: Select category
      testCaseDescription: Select a category from the dropdown
      testSteps: |
        = SetProperty(WeatherCategory.SelectedItems;Table(First(WeatherCategory.Items)));;
          Assert(CountRows(WeatherCategory.SelectedItems)=1);;
     
testSettings:
  headless: false
  locale: "en-US"
  recordVideo: true
  extensionModules:
    enable: true
  browserConfigurations:
    - browser: Chromium
  timeout: 480000

environmentVariables:
  users:
    - personaName: User1
      emailKey: user1Email
      passwordKey: NotNeeded
